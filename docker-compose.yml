version: '3.8'

services:
  frontend:
    image: node:20-alpine
    container_name: frontend_app
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install && npm start"
    networks:
      - laravel_network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    depends_on:
      - app
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/var/www/html/frontend/build
      - ./laravel:/var/www/html/laravel
    ports:
      - "80:80"
    networks:
      - laravel_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: always
    user: "${HOST_UID}:${HOST_UID}"
    volumes:
      - .:/var/www/html
      - ./laravel/storage:/var/www/html/laravel/storage
      - ./laravel/bootstrap/cache:/var/www/html/laravel/bootstrap/cache
      - ./laravel:/var/www/html/laravel
    depends_on:
      - db
    networks:
      - laravel_network

  db:
    container_name: db
    image: mysql:8.0
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
    env_file:
      .env
    ports:
      - "3306:3306"
    networks:
      - laravel_network

  test_db:
    container_name: test_db
    image: mysql:8.0
    ports:
      - "3308:3306"
    env_file:
      - .env.testing
    volumes:
      - test_mysql-data:/var/lib/mysql
    networks:
      - laravel_network

volumes:
  mysql-data:
  test_mysql-data:

networks:
  laravel_network:
